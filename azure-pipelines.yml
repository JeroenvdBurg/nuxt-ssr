# Run On PRs against all branches
pr:
  branches:
    include:
      - "*"
# Run on changes to main or dev or release branches
trigger:
  batch: true
  branches:
    include:
      - main
      - develop

pool:
  vmImage: "ubuntu-latest"

variables:
  bicepRegistryServiceConnection: "Bicep registry"
  azureServiceConnection: "Q42 Development"
  location: "westeurope"
  appdir: "src"

  isMainBranch: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]

stages:
  - stage: BuildInfra
    displayName: Build Infra
    jobs:
      - template: "azure-pipelines/infra-build.yml"
        parameters:
          workingDir: IaC-Bicep
          sourceFile: "main.bicep"
          artifactName: "Nuxt.Infra"

  - stage: DeployInfra
    displayName: Deploy Infra
    condition: and( succeeded() , eq(variables.isMainBranch, true) )
    dependsOn:
      - BuildInfra
    jobs:
      - template: "azure-pipelines/infra-deploy.yml"
        parameters:
          workingDir: $(Pipeline.Workspace)/Nuxt.Infra/IaC-Bicep
          environment: "main"
          variableGroupName: "main"

  - stage: BuildApp
    displayName: Build App
    jobs:
      - job: Build
        variables:
          - group: main
        steps:
          - task: UseNode@1
            inputs:
              version: "18.x"

          - task: Npm@1
            displayName: "npm install"
            inputs:
              command: "install"
              workingDir: $(appdir)

          - task: AzureCLI@2
            displayName: "npm run build"
            inputs:
              azureSubscription: $(azureServiceConnection)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                NITRO_PRESET=azure npm run build
              workingDirectory: $(appdir)

          - task: AzureCLI@2
            displayName: "deploy Static Webapp"
            inputs:
              azureSubscription: $(azureServiceConnection)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                npm install -g @azure/static-web-apps-cli
                swa deploy .output/public --api-location .output/server --deployment-token $(deployment-token)
              workingDirectory: $(appdir)
